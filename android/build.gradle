/*buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // The Fabric Gradle plugin uses an open ended version to react
        // quickly to Android tooling updates
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
plugins {
    id "me.tatarka.retrolambda" version "3.4.0"
}*/

buildscript {
    ext.kotlin_version = '1.3.72'
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.google.com' } // since jcenter doesn't have gradle:3.0.1
    }
    dependencies {
        //classpath "com.android.tools.build:gradle:2.2.3"
        //classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.android.tools.build:gradle:3.6.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.google.com' } // since jcenter doesn't have gradle:3.0.1
    }
    dependencies {
    }
}

// for the retro-lambda plugin above (so Android Studio doesn't show red-lines on lambda code)
/*android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}*/

//Boolean excludeReactNative = binding.variables["excludeReactNative"] ?: false
Boolean excludeReactNative = project.properties["excludeReactNative"] == "true" ?: false
println("excludeReactNative: $excludeReactNative")

apply plugin: "com.android.library"
android {
    compileSdkVersion 26
    //buildToolsVersion "23.0.1"
	buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 2
        versionName "1.1"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    lintOptions {
       warning "InvalidPackage"
    }

    sourceSets {
        main {
            java {
                if (excludeReactNative) {
                    println("excludeReactNative_2: $excludeReactNative")

                    println("srcDirs:${java.srcDirs}")
                    //exclude '**/*'
                    //java.exclude '**/*'

                    //java.exclude '**/LibMusePackage.kt'
                    //java.exclude '**/LibMuseModule.kt'
                    //java.exclude '**/ReactNativeHelpers.kt'

                    //println("jniLibs:${jniLibs.srcDirs}")
                    //jniLibs.srcDirs = [java.srcDirs[0].toString() + "../jniLibs"]

                    // the file-excludes don't work fsr; so split into folders, and only include the core/non-rn folder
                    //java.srcDirs = [java.srcDirs[0].toString() + "/com", java.srcDirs[0].toString() + "/v/LibMuse/core"]
                    //java.srcDirs = [java.srcDirs[0].toString() + "/com/choosemuse/libmuse", java.srcDirs[0].toString() + "/v/LibMuse/core"]
                    java.srcDirs = [java.srcDirs[0].toString() + "/core"]
                    println("srcDirs2:${java.srcDirs}")
                }
            }
        }
    }
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

/*task nativeLibsToJar(type: Zip, description: 'create a jar archive of the native libs') {
    destinationDir file("$buildDir/native-libs")
    baseName 'native-libs'
    extension 'jar'
    from fileTree(dir: 'Libraries', include: '**     [remove this space]     /*.so')
    into 'lib/'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(nativeLibsToJar)
}*/

dependencies {
    implementation 'com.android.support:appcompat-v7:26.0.0'
    // delaying androidx until lf-project is updated to version of capacitor compatible with androidx
    //implementation "androidx.appcompat:appcompat:1.1.0"

    //compile "com.facebook.react:react-native:+"
    if (!excludeReactNative) {
        implementation 'com.facebook.react:react-native:0.20.+'
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //compile files("Libraries/libmuse_android.jar")
    //compile fileTree(include: ["*.jar"], dir: "Libraries")
    //compile fileTree(include: ["*.jar", "*.so"], dir: "Libraries")
    //compile fileTree(dir: "$buildDir/native-libs", include: 'native-libs.jar')

    //compile 'com.google.code.gson:gson:2.8.0'
    //compile project(':react-native-background-timer')
}
repositories {
    mavenCentral()
}